#include <stdio.h>
int main(void)
{
   char* pC = "C Programming";
   printf("문자열을 변환기호를 이용해서 출력\n");
   printf("%s\n", pC);
   printf("반복문을 이용해 한 글자씩 출력\n");
   while (*pC)
      printf("%c", *pC++);
   printf("\n");
   
   return 0;
}
---------------------------------------------------------------
#include <stdio.h>
int main(void)
{
   char* pStr[] = { "english", "math", "korean" };
   char subject[][8] = { "english", "math", "korean" };
   int i;
   printf("포인터 배열을 이용해서 문자열을 출력합니다.\n");
   for (i = 0; i < 3; i++)
      printf("pStr[%d] = %s\n", i, pStr[i]);
   
      printf("2차원 배열을 이용해서 문자열을 출력합니다.\n");
   for (i = 0; i < 3; i++)
      printf("subject[%d] = %s\n", i, subject[i]);
   return 0;
}

Q. char subject [][8] 에서 앞칸을 왜 비워두는지 모르겠음.
A.2차원 배열로 선언이기 때문에 앞에는 선언안하고 뒤에 8개짜리의 행만 선언한모습인가 같아
-------------------------------------------------------------------
#include<stdio.h>
struct list {
   char name;
   char gender;
   int age;
};
int main() {
   struct list st1 = { 'T','M',25 };
   struct list st2, st3 = { 'P','F',28 };
   st2 = st1;
   st3.name = st1.name;
   st3.gender = st1.gender;
   
   printf("     이름 성별 나이\n");
   printf("--------------------\n");
   printf("st1   %c    %c    %d \n", st1.name, st1.gender, st1.age);
   printf("st2   %c    %c    %d \n", st2.name, st2.gender, st2.age);
   printf("st3   %c    %c    %d \n", st3.name, st3.gender, st3.age);
   return 0;

}
------------------------------------------------------------------
#include <stdio.h>
#include <math.h>
struct ThreeDime {
   double x;
   double y;
   double z;
   
};
typedef struct ThreeDime ThreeDime;
int main(void)
{
   
   double D1, D2;
   ThreeDime A1, A2;
   
      printf("3차원 점 A1의 x, y, z 좌표를 입력하시오.\n");
   scanf("%lf %lf %lf", &A1.x, &A1.y, &A1.z);
   
      printf("\n3차원 점 A2의 x, y, z 좌표를 입력하시오.\n");
   scanf("%lf %lf %lf", &A2.x, &A2.y, &A2.z);
   
   // D1 : 점 A1과 원점의 거리
   D1 = sqrt(A1.x * A1.x + A1.y * A1.y + A1.z * A1.z);
   // D2 : 점 A1과 점 A2의 거리
   D2 = sqrt((A1.x - A2.x) * (A1.x - A2.x) + (A1.y - A2.y) * (A1.y - A2.y) + (A1.z - A2.z)
         * (A1.z - A2.z));
   printf("\n점 A1과 원점의 거리는 %.2lf이다.\n\n", D1);
   printf("점 A1과 점 A2의 거리는 %.2lf이다.\n", D2);
   
   return 0;
--------------------------------------------------------------------------------------------
#include <stdio.h>
struct ThreeDime {
   double x;
   double y;
   double z;
};
typedef struct ThreeDime ThreeDime;
int main(void)
{
   
   ThreeDime A1 = { 3, 1, 8 };
   ThreeDime * pA1 = &A1;
   printf("3차원 점 A1의 x : %.2lf, y : %.2lf, z : %.2lf이다.\n", pA1->x, pA1->y, pA1->z);
   return 0;
}

ThreeDime * pA1 = &A1; 로 포인터 변수 형태를 정의하고, 마지막 printf에서 화살표 연산자를 통해 A1이라는 구조체의 멤버 변수에 접근할 수 있게 된다. 개인적으로는 pA1은 A1의 주솟값이며, 그것을 화살표 연산자로 (ex pA1 -> x) 값을 할당시키는 것으로 이해했다.
------------------------------------------------------
#include <stdio.h>

 int main(void)
 {
    enum { yellow, red, blue=5, green, magenta } color;
    printf("원하는 색을 입력하세요.\n");
    printf("0번 : 노란색, 1번 : 빨간색\n");
    printf("2번 : 파란색, 3번 : 초록색\n");
    scanf_s("%d", &color);
   
       if (color == yellow) printf("노란색입니다.\n");
    else if (color == red) printf("빨간색입니다.\n");
    else if (color == blue) printf("파란색입니다.\n");
    else if (color == green) printf("초록색입니다.\n");
    return 0;
    }
이렇게 되면 0 은 노랑, 1은 빨강이 나오지만 다음 파랑이 5로 지정되어 있어 2,3,4 는 공란이 되고 green, magenta는 각각 6,7이 된다.