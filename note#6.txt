#include <stdio.h>

int SumTwo(int a, int b);  //함수 선언

int main(void)
{
	int x = 10, y = 5;
	int value;

	value = SumTwo(x, y); //함수 호출

	printf("두 수의 합 : %d\n", value);

	return 0;
}

int SumTwo(int a, int b)
{
	int result;
	result = a + b;
	return result;
}

1) 함수를 선언하는 것만 이해됨. int main아래의 중괄호에서 result a + b; 가 나와야 하지 않을까라는 의문과 왜 int main과 int SumTwo를 나누어서 계산을 하는지도 잘 모르겠음. 처음에는 중간고사 범위가 int main 하나로 진행했듯이 int SumTwo 하나로만 처리하는 줄 알았는데 왜 두개를 나누는 건지 잘 몰라요. 진행 순서도 이해가 안됨.
 
int main처럼 int SumTwo도 순서가 존재해야 한다고 생각했지만 int SumTwo은 그저 하나의 도구 모음이라고 생각을 하면 int main 항에서 SumTwo를 사용하게 되면 int SumTwo에 있는 코드의 내용을 적용하고 값을 계산해서 다시 return을 통해 반환하게 됨을 앎. 예를 들어 value = SumTwo(x,y); 가 호출한 순간 int SumTwo 항의 코드들이 진행되고 return result; 로 인해 SumTwo(x,y)의 값이 result가 되어 value = result 가 된다. 그 아래의 printf문에서 뒤에 value 대신 SumTwo(x,y)를 넣어도 값은 똑같이 나오는 것도 알게됨. 

함수 선언을 할 때 int SumTwo(int a, int b);에서 a,b가 만약 float가 된다면 int SumTwo가 아닌 float SumTwo로 바꿔줘야 한다. (혹은 double)

============================

#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

float SumTwo(float a, float b);  //함수 선언

int main(void)
{
	float value;
	float x, y;
	printf("두 수를 입력하세요. : ");
	scanf("%f %f", &x, &y);

	

	value = SumTwo(x, y); //함수 호출

	printf("두 수의 합 : %.2f\n", value);

	return 0;
}

float SumTwo(float a, float b)
{
	float average;
	average = (a + b) / 2;
	return average;
}
int 대신에 float를 써서 나타내었다.
=================================
#include <stdio.h>

int Integral(int start, int end);

int main(void)
{
	int result = 0, i;

	printf("함수를 사용하지 않았을 때 \n");
	for (i = 1; i <= 10; i++)
		result += i;

	printf("1~10까지의 합은 %d이다.\n", result);
	result = 0;

	for (i = 7; i <= 17; i++)
		result += i;

	printf("7~17까지의 합은 %d이다.\n", result);
	printf("*****************************\n");
	printf("함수를 이용해 합을 구한 것\n");
	printf("1~10까지의 합은 %d이다.\n", Integral(1, 10));
	printf("7~17까지의 합은 %d이다.\n", Integral(7, 17));

	return 0;
}
int Integral(int start, int end)
{
	int sum = 0, i;
	for (i = start; i <= end; i++)
		sum += i;
	return sum;
}
=====================================
int factorial(int n);
int main(void)
{
 int fact_num;
 fact_num = factorial(10);

	 printf("10 팩토리얼 : %d\n", fact_num);
		
		 return 0;
 }

int factorial(int n)
{
 if (n <= 1)
	 return(1);
 else
	 return(n * factorial(n- 1));
 }

n=5라고 가정하면, 맨 아래의 팩토리얼 n-1 에 4가 입력된 상태로 위에 int factorial(int n)에 다시 들어가 다시 반복하여 n =1이 될 때 까지 반복하게 되고 1이 되는 순간 멈추게 되어 5*4*3*2*1이 되어 120이 된다.
====================================================================================================
#include"myheader.h"
int Max(int Array[], int Size) {
   int i, max;
   max = Array[0];
   for (i = 0; i < Size; i++) {
      if (max < Array[i])
         max = Array[i];
   }
   return max;
}
int Min(int Array[], int Size) {
   int i, min;
   min = Array[0];
   for (i = 0; i < Size; i++) {
      if (min > Array[i])
         min = Array[i];
   }
   return min;
}
int Avg(int Array[], int Size) {
   int i, avg,sum=0;
   for (i = 0; i < 10; i++) {
      sum += Array[i];
   }
   avg = sum / Size;
   return avg;
}
int main() {
   int b[] = { 20, 34, 12, 24, 54, 91, 9, 40, 81, 10 };
   int max, min,avg;
   max = Max(b, 10);
   min = Min(b, 10);
   avg = Avg(b, 10);
   printf("배열 b의 최대값은 %d 이다\n", max);
   printf("배열 b의 최소값은 %d 이다\n", min);
   printf("배열 b의 평균은 %d 이다\n", avg);
}
배열에서의 최대값과 최소값을 구하는 코드인데 먼저 인덱스의 첫번째 자리를 각각max 와  min으로 설정하고 그 값보다 크거나 작아질떄 마다 max와min값을 새로 
부여하고 마지막 값까지 지나간후에 설정된 값이 최대값과 최소값을 남기게 된다 
평균은 시간이 남아서 작성하였는데 배열값들을 전부 더한후 Size 값으로 나누면 평균을 구하게된다
이다음 코드는 수업시간중 작성한 헤더 파일이다
#include<stdio.h>
int SumTwo(int a, int b) {
   int result;
   result = a + b;
   return result;
}
float Averege(float a, float b) {
   float result;
   result = (a + b) / 2;
   return result;
}
void print_hello() {
   printf("Hello World\n");
}
int Integral(int start, int end) {
   int i, sum = 0;
   for (i = start; i <= end; i++)
      sum += i;
   return sum; 
}
void upper_case(char ch) {
   char res;
   if (ch >= 'a' && ch <= 'z')
      res = ch - 32;
   else res = ch;
   putchar(res);
}
int SumArray(int Array[], int Size) {
   int result = 0, i;
   for (i = 0; i < Size; i++) {
      result += Array[i];
   }
   return result;
}
int factorial(int n) {
   if (n <= 1) return 1;
   else return (n * factorial(n - 1));
}
int Max(int Array[], int Size) {
   int i, max;
   max = Array[0];
   for (i = 0; i < Size; i++) {
      if (max < Array[i])
         max = Array[i];
   }
   return max;
}
int Min(int Array[], int Size) {
   int i, min;
   min = Array[0];
   for (i = 0; i < Size; i++) {
      if (min > Array[i])
         min = Array[i];
   }
   return min;
}
int Avg(int Array[], int Size) {
   int i, avg,sum=0;
   for (i = 0; i < 10; i++) {
      sum += Array[i];
   }
   avg = sum / Size;
   return avg;
}