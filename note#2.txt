2023.09.20 Cp
연습문제 1, 2 번 

Q1. 식별자로 쓸때 첫글자로 오면 안되거나 사용하면안되는게 뭐가 있을까?
a. 숫자나 _를 제외한 다른 특수문자는 안되는 것으로 예상.
b. 앞서 배운 키워드는 약속이라서 사용하면 안됨.

Q2. 숫자를 첫글자로 식별자를 만들면 어떻게 될까?
a. 식별자로 인식이되지않아 오류가 날 것으로 예상.
b. 규칙으로 인해 오류가 남.

Q2-1. 그렇다면 왜 숫자는 먼저 쓰면 안되는걸까?



Q3. char a에 129를 넣으면 129로 출력이안될까
a. char는 문자형이라 129는 int로 처리하는게 맞다고 생각함.
b. 그와 더불어 코딩을 돌려본 결과 -129로 결과값이 나오는데 이게 char로 인한 오버플로 현상인지 잘 모르겠음. 변수가 감당할 수 있는 숫자 범위에 넘어가야 생기는 것이 오버플로인 것으로 알고 있는데 이 현상도 포함되는지 모르겠음.

Q4. const int의 변수값에 새로운 값을 할당할수 있을까?
a. const int의 변수는 아예 상수를 못 박는거라고 생각해서 안된다고 판단.
b. 처음에는 안된다고 생각했지만 후에 배운 명시적 형 변환의 방법으로 되지 않을까 생각이 듦. 그러나 해본 결과 오류가 뜨는 것으로 보아 변경이 안되는 것으로 판단함.

Q5. 왜 컴파일러는 자동으로 형변환을 해줄까?
a. 컴파일러가 정수형과 실수형 연산을 할 떄 자동으로 실수랑 연산을 하여 int보다 더 큰 float형으로 변환시켜 데이터 값을 잃는 것을 방지시켜주기 위함이라 예상.

b. 사용자가 변수에 맞는 자료형을 쓰는 것도 실력인데 왜 굳이 자동으로 바꿔줄까? 그렇다면 자동으로 바꿔주는 이유는 무엇일까 
-> double만 쓰면 코딩할 때 편할탠데 왜 다른 변수형도 존재하는 걸까? 
-> double형으로만 자료형을 사용한다면 어떻게 될까?

a. 수많은 코드를 짜야하는 실무에서 모든 변수형을 double만 사용하면 할당되는 데이터의 크기가 너무 커져서 공간의 낭비가 초래될 것 같음.
b. 형변환의 순서를 벤다이어그램으로 나타내보면 double이 할당할 수 있는 데이터가 너무 커서 효율성이 떨어진다고 예상. 자료를 최소한의 변수형을 이용하여 최고의 효율성을 내기 위함이라고 예상됨. 

이 질문에 대한 추가적인 논의는
1. 묵시적 형 변환은 우리가 사용하려는 변수, 데이터를 어떻게든 사용하기 위해서 컴파일러가 노력하는 것은 아닐까.
2. 형 변환은 다른 프로그램이 담당했어도 되지 않았을까? 왜 컴파일러가 담당하는 걸까? 
3. 묵시적 형 변환을 이용하면 잘못 입력해도 모르지 않을까? 후에 더욱 더 복잡하고 어려운 코딩을 할 때 오류가 나면 묵시적 형 변환으로 인한 오류임을 알아차리기 힘들지 않을까?

예제2-6의 예측 
c = 14.00
f = 14.00
f= 13.60
Q. 그렇게 예측한이유는 무엇인가?

a, c는 처음에 int로 선언되었으나 프린트문에서 float로 명시적 형변환으로 인해 14.00이 되었고 2번째 f는 float값들끼리에 연산이므로 14.00이 되었다.
 3번째 f는 d랑 (int)e와의 연산이므로 e값이 8.4가아닌 8로 연산되어서 f의 값이 13.60이되었다여기서 13.60이 된이유는 프린트문에서 출력f값을 .2로 설정해서 소수점 둘째자리까지 나오게 된다.